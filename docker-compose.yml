version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mycpa-postgres
    environment:
      POSTGRES_DB: mycpa_development
      POSTGRES_USER: mycpa_user
      POSTGRES_PASSWORD: mycpa_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init:/docker-entrypoint-initdb.d
    networks:
      - mycpa-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mycpa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mycpa-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mycpa-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mycpa_user:mycpa_password@postgres:5432/mycpa_development
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - mycpa-network
    command: npm run dev

  # Frontend Web App
  frontend-web:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile
    container_name: mycpa-frontend-web
    environment:
      REACT_APP_API_URL: http://localhost:3000
    ports:
      - "3001:3000"
    volumes:
      - ./frontend/web:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - mycpa-network
    command: npm start

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mycpa-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend-web
    networks:
      - mycpa-network

volumes:
  postgres_data:
  redis_data:

networks:
  mycpa-network:
    driver: bridge

